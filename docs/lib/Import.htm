<!DOCTYPE HTML>
<html lang="en">
<head>
<title>Import - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The Import declaration imports a module, or imports names from a module." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Import <span class="ver">[v2.1-alpha.11+]</span></h1>

<p>Imports a module, or imports names from a module.</p>

<pre class="Syntax">
<span class="func">Import</span> ModuleName <span class="optional"><span class="func">as</span> ModuleAlias</span>
<span class="func">Import</span> { ExportName <span class="optional"><span class="func">as</span> Alias</span>, ... } <span class="func">from</span> ModuleName</span>
<span class="func">Import</span> * <span class="func">from</span> ModuleName
</pre>

<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>ModuleName</dt>
  <dd>A module name, either as specified with <a href="_Module.htm">#Module</a> or matching the base name of a script (.ahk) file in a <a href="../Scripts.htm#lib">Lib folder</a>.</dd>
  
  <dt>ModuleAlias</dt>
  <dd>An identifier to use within the current module to refer to the imported module's <a href="Export.htm#Remarks">default export</a>.</dd>
  
  <dt>ExportName</dt>
  <dd>An identifier which is exported from the module.</dd>
  
  <dt>Alias</dt>
  <dd>An identifier to use within the current module in place of <em>ExportName</em>.</dd>

</dl>

<h2 id="Imported_Modules">Import from File</h2>
<p>Imports are processed after the main script file has been parsed, in an unspecified order. If <em>ModuleName</em> does not match a module defined by #Module or previously imported from file, Import attempts to locate a module file in a <a href="../Scripts.htm#lib">Lib folder</a>.</p>
<p>Currently a module file's name must be "<em>ModuleName</em>.ahk". Future versions may allow directories as modules or module packages (e.g. A or A.B &rarr; "Lib\A\__init.ahk").</p>

<h2 id="Imported_Names">Imported Names</h2>
<p>If <em>from</em> is used, the module's default export is not added to the current module's global namespace unless <em>ModuleAlias</em> is specified. By contrast, <code>Import MyModule</code> adds the module's default export as <em>MyModule</em>.</p>
<p>If <code>*</code> is used, each unassigned and undeclared name in the current module may implicitly resolve to a name exported from <em>ModuleName</em>. If a name is exported from multiple imported modules, the last import takes precedence. Explicit imports and other declarations take precedence over implicit imports, regardless of order.</p>
<p class="note"><strong>Note:</strong> An implicitly imported variable cannot be the target of an assignment, as the presence of an assignment would cause a new variable to be created in the current module.</p>
<p>A load-time error is raised if any name used in an explicit import is also used in some other declaration within the current module.</p>

<h2 id="Remarks">Remarks</h2>
<p>Import statements are recognized only when not enclosed by a function or block.</p>

<h2 id="Related">Related</h2>
<p><a href="../Modules.htm">Modules</a>, <a href="Export.htm">Export</a>, <a href="_Module.htm">#Module</a>, <a href="_Include.htm">#Include</a></p>

</body>
</html>
