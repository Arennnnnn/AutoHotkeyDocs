<!DOCTYPE HTML>
<html lang="en">
<head>
<title>#Module - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The #Module directive starts a new module." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>#Module <span class="ver">[v2.1-alpha.11+]</span></h1>

<p>Starts a new module.</p>

<pre class="Syntax"><span class="func">#Module</span> ModuleName</pre>

<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>ModuleName</dt>
  <dd>A unique name for use with <a href="Import.htm">Import</a>.</dd>
  
</dl>
<h2 id="Remarks">Remarks</h2>
<p>The new module starts with an empty global namespace and implicit import from the built-in module.</p>
<p>The module name should be a valid identifier for ease of use with <a href="Import.htm">Import</a>. Future versions may interpret dots within the name as delimiters for a package hierarchy.</p>
<p>When <a href="Import.htm">Import</a> loads a file, the module automatically begins at the start of the file and the #Module directive should typically not be used. However, the directive can be combined with #Include, and can be used to combine modules into one file.</p>

<h2 id="Related">Related</h2>
<p><a href="../Modules.htm">Modules</a>, <a href="Export.htm">Export</a>, <a href="Import.htm">Import</a>, <a href="_Include.htm">#Include</a></p>

</body>
</html>
